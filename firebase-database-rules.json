
{
  "rules": {
    ".read": true,
    ".write": true,
    "ScannedIDs": {
      "$rfid": {
        ".validate": "newData.hasChildren(['timestamp', 'processed']) && $rfid.matches(/^[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}$/)",
        "timestamp": {
          ".validate": "newData.isNumber() && newData.val() > 0"
        },
        "processed": {
          ".validate": "newData.isBoolean()",
          ".write": true
        }
      }
    },
    "students": {
      ".indexOn": ["rfid", "name", "email"],
      "$studentId": {
        ".validate": "newData.hasChildren(['name', 'rfid', 'email', 'course', 'year', 'section', 'parentName', 'parentEmail']) && $studentId.matches(/^TA[0-9]{10}$/)",
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "rfid": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}$/)"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().contains('@') && newData.val().length <= 100"
        },
        "course": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
        },
        "year": {
          ".validate": "newData.isString() && newData.val().matches(/^[1-4](st|nd|rd|th) Year$/)"
        },
        "section": {
          ".validate": "newData.isString() && newData.val().matches(/^[A-Z]$/) && newData.val().length === 1"
        },
        "parentName": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "parentEmail": {
          ".validate": "newData.isString() && newData.val().contains('@') && newData.val().length <= 100"
        }
      }
    },
    "adminUsers": {
      ".indexOn": ["email"],
      "$adminId": {
        ".validate": "newData.hasChildren(['name', 'password', 'role', 'email'])",
        "password": {
          ".validate": "newData.isString() && newData.val().length >= 6 && newData.val().length <= 50"
        },
        "name": {
          ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 100"
        },
        "role": {
          ".validate": "newData.isString() && (newData.val() === 'Administrator' || newData.val() === 'Supervisor')"
        },
        "email": {
          ".validate": "newData.isString() && newData.val().contains('@') && newData.val().length <= 100"
        }
      }
    },
    "attendanceRecords": {
      ".indexOn": ["status"],
      "$studentId": {
        ".validate": "root.child('students').child($studentId).exists()",
        "$date": {
          ".validate": "$date.matches(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)",
          "$classKey": {
            ".validate": "newData.hasChildren(['status', 'subject', 'timeSlot', 'recordedAt', 'classDate', 'actualScanTime'])",
            "status": {
              ".validate": "newData.isString() && (newData.val() === 'present' || newData.val() === 'absent' || newData.val() === 'late')"
            },
            "timeIn": {
              ".validate": "(newData.isString() && newData.val().matches(/^[0-9]{2}:[0-9]{2}$/)) || !newData.exists()"
            },
            "timeOut": {
              ".validate": "(newData.isString() && newData.val().matches(/^[0-9]{2}:[0-9]{2}$/)) || !newData.exists()"
            },
            "subject": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "timeSlot": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "recordedAt": {
              ".validate": "newData.isNumber() && newData.val() > 0"
            },
            "classDate": {
              ".validate": "newData.isString() && newData.val().matches(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/)"
            },
            "actualScanTime": {
              ".validate": "newData.isString() && newData.val().matches(/^[0-9]{2}:[0-9]{2}$/)"
            }
          }
        }
      }
    },
    "schedules": {
      "$studentId": {
        ".validate": "root.child('students').child($studentId).exists()",
        "subjects": {
          "$subjectId": {
            ".validate": "newData.hasChildren(['name', 'code', 'color'])",
            "name": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50"
            },
            "code": {
              ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 10"
            },
            "color": {
              ".validate": "newData.isString() && newData.val().length > 0"
            }
          }
        },
        "$day": {
          ".validate": "($day === 'monday' || $day === 'tuesday' || $day === 'wednesday' || $day === 'thursday' || $day === 'friday' || $day === 'saturday' || $day === 'sunday') && newData.val() !== null",
          "$index": {
            ".validate": "newData.hasChildren(['timeSlot', 'subjectId'])",
            "timeSlot": {
              ".validate": "newData.isString() && newData.val().length > 0"
            },
            "subjectId": {
              ".validate": "newData.isString() || newData.val() === null"
            }
          }
        }
      }
    },
    "absenteeAlerts": {
      "$date": {
        ".validate": "$date.matches(/^[0-9]{4}-[0-9]{2}-[0-9]{2}$/) && (newData.val() === null || newData.val().length >= 0)"
      }
    }
  }
}
